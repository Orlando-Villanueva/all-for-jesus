---
import Layout from "../layouts/Layout.astro";
import { Image } from 'astro:assets';
import fs from "fs";
import path from "path";

// Get all PDF files from public/docs/
const docsDirectory = path.join(process.cwd(), "public", "docs");
const pdfFiles = fs
    .readdirSync(docsDirectory)
    .filter((file) => file.endsWith(".pdf"));

// Get all cover images from assets/images/covers/
const coverImages = import.meta.glob('/src/assets/images/covers/*.{png,jpg,jpeg}', { eager: true });

// Function to convert filename to readable sentence
function fileNameToSentence(fileName: string): string {
    return fileName
        .replace(/\.pdf$/, "")
        .split("_")
        .map((word) => word.charAt(0) + word.slice(1))
        .join(" ");
}
---

<Layout title="Akathist Prayers">
    <div class="max-w-6xl mx-auto py-8 px-4">
        <h1 class="text-2xl font-semibold mb-6 text-center">
            Download Akathist Prayers
        </h1>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 items-start" x-data="{ hoveredItem: null }">
            {
                pdfFiles.map((file, index) => {
                    const coverImage = Object.values(coverImages).find(img => img.default.src.includes(file.replace('.pdf', '')));
                    return (
                        <div
                            class="transition-all duration-200 ease-in-out"
                            x-on:mouseenter={`hoveredItem = ${index}`}
                            x-on:mouseleave="hoveredItem = null"
                        >
                            <a
                                href={`/all-for-jesus/docs/${file}`}
                                download
                                class="block p-4 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 h-full flex flex-col items-center justify-center text-center"
                                x-bind:class={`hoveredItem === ${index} ? 'bg-gray-100 dark:bg-gray-800' : ''`}
                            >
                                {coverImage && (
                                    <Image
                                        src={coverImage.default}
                                        alt={fileNameToSentence(file)}
                                        width={300}
                                        height={400}
                                        loading="lazy"
                                        class="w-full mb-3 object-cover rounded-md shadow-md"
                                    />
                                )}
                                <span class="text-sm">
                                    {fileNameToSentence(file)}
                                </span>
                            </a>
                        </div>
                    )
                })
            }
        </div>
    </div>
</Layout>
